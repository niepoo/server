create procedure test_01(
sys_type varchar(255),
engine varchar(255),
fields varchar(255))
begin
set @str= concat('
  create table t1(
    x int unsigned,
    y int unsigned,
    sys_start ', sys_type, ' as row start invisible,
    sys_end ', sys_type, ' as row end invisible,
    period for system_time (sys_start, sys_end))
  with system versioning
  engine ', engine);
prepare stmt from @str; execute stmt; drop prepare stmt;
insert into t1(x, y) values(3, 4);
insert delayed into t1(x, y) values(2, 3);
insert into t1 values(40, 33);
set @str= concat('select x, y, ', fields, ' from t1');
prepare stmt from @str; execute stmt; drop prepare stmt;
drop table t1;
end~~
create procedure test_02(
sys_type varchar(255),
engine varchar(255),
fields varchar(255))
begin
set @str= concat('
  create table t1(
    id int unsigned auto_increment primary key,
    x int unsigned,
    y int unsigned,
    sys_start ', sys_type, ' as row start invisible,
    sys_end ', sys_type, ' as row end invisible,
    period for system_time (sys_start, sys_end))
  with system versioning
  engine ', engine);
prepare stmt from @str; execute stmt; drop prepare stmt;
insert into t1(x, y) values(33, 44);
insert into t1(id, x, y) values(20, 33, 44);
insert into t1 values(40, 33, 44);
set @str= concat('select id, x, y, ', fields, ' from t1');
prepare stmt from @str; execute stmt; drop prepare stmt;
drop table t1;
end~~
create procedure test_03(
sys_type varchar(255),
engine varchar(255),
fields varchar(255))
begin
set @str= concat('
  create table t1(
    x int unsigned,
    y int unsigned,
    sys_start ', sys_type, ' as row start invisible,
    sys_end ', sys_type, ' as row end invisible,
    period for system_time (sys_start, sys_end))
  with system versioning
  engine ', engine);
prepare stmt from @str; execute stmt; drop prepare stmt;
create view vt1_1 as select x, y from t1;
insert into t1(x, y) values(8001, 9001);
insert into vt1_1(x, y) values(1001, 2001);
insert into vt1_1 values(1002, 2002);
set @str= concat('select x, y, ', fields, ' from t1');
prepare stmt from @str; execute stmt; drop prepare stmt;
select x, y from vt1_1;
end~~
create procedure test_04(
sys_type varchar(255),
engine varchar(255),
fields varchar(255))
begin
set @str= concat('
  create table t1(
    id bigint primary key,
    a int,
    b int)
  with system versioning
  engine ', engine);
prepare stmt from @str; execute stmt; drop prepare stmt;
insert into t1 values(1, 1, 1);
select row_start, row_end from t1 into @sys_start, @sys_end;
select id, a, b from t1;
insert into t1 values(2, 2, 2);
select id, a, b, row_start > @sys_start as C, row_end = @sys_end as D from t1 where id = 2;
drop table t1;
end~~
create procedure test_05(
sys_type varchar(255),
engine varchar(255),
fields varchar(255))
begin
set @str= concat('(
    x int unsigned,
    y int unsigned,
    sys_start ', sys_type, ' as row start invisible,
    sys_end ', sys_type, ' as row end invisible,
    period for system_time (sys_start, sys_end))
  with system versioning
  engine ', engine);
set @str2= concat('create table t1', @str);
prepare stmt from @str2; execute stmt; drop prepare stmt;
set @str2= concat('create table t2', @str);
prepare stmt from @str2; execute stmt; drop prepare stmt;
insert into t1(x, y) values
(1, 1000),
(2, 2000),
(3, 3000),
(4, 4000),
(5, 5000),
(6, 6000),
(7, 7000),
(8, 8000),
(9, 9000);
delete from t1 where x >= 1;
insert into t1(x, y) values
(1, 1001),
(2, 2001),
(3, 3001),
(4, 4001),
(5, 5001),
(6, 6001);
insert into t1(x, y, sys_start) values
(7, 7001, DEFAULT);
insert into t1(x, y, sys_end) values
(8, 8001, DEFAULT);
insert into t1(x, y, sys_start, sys_end) values
(9, 9001, DEFAULT, DEFAULT);
insert into t2 select x, y from t1 for system_time between timestamp '0000-0-0 0:0:0' and timestamp '9999-1-1 0:0:0';
select x, y from t1;
select x, y from t2;
drop table t1;
drop table t2;
end~~
call test_01('timestamp(6)', 'myisam', 'sys_end');
x	y	sys_end
3	4	2038-01-19 03:14:07.999999
2	3	2038-01-19 03:14:07.999999
40	33	2038-01-19 03:14:07.999999
call test_01('bigint unsigned', 'innodb', 'vtq_commit_ts(sys_end)');
x	y	vtq_commit_ts(sys_end)
3	4	2038-01-19 03:14:07.999999
2	3	2038-01-19 03:14:07.999999
40	33	2038-01-19 03:14:07.999999
call test_02('timestamp(6)', 'myisam', 'sys_end');
id	x	y	sys_end
1	33	44	2038-01-19 03:14:07.999999
20	33	44	2038-01-19 03:14:07.999999
40	33	44	2038-01-19 03:14:07.999999
call test_02('bigint unsigned', 'innodb', 'vtq_commit_ts(sys_end)');
id	x	y	vtq_commit_ts(sys_end)
1	33	44	2038-01-19 03:14:07.999999
20	33	44	2038-01-19 03:14:07.999999
40	33	44	2038-01-19 03:14:07.999999
call test_03('timestamp(6)', 'myisam', 'sys_end');
x	y	sys_end
8001	9001	2038-01-19 03:14:07.999999
1001	2001	2038-01-19 03:14:07.999999
1002	2002	2038-01-19 03:14:07.999999
x	y
8001	9001
1001	2001
1002	2002
drop table t1;
drop view vt1_1;
call test_03('bigint unsigned', 'innodb', 'vtq_commit_ts(sys_end)');
x	y	vtq_commit_ts(sys_end)
8001	9001	2038-01-19 03:14:07.999999
1001	2001	2038-01-19 03:14:07.999999
1002	2002	2038-01-19 03:14:07.999999
x	y
8001	9001
1001	2001
1002	2002
drop table t1;
drop view vt1_1;
call test_04('timestamp(6)', 'myisam', 'sys_end');
id	a	b
1	1	1
id	a	b	C	D
2	2	2	1	1
call test_04('bigint unsigned', 'innodb', 'vtq_commit_ts(sys_end)');
id	a	b
1	1	1
id	a	b	C	D
2	2	2	1	1
call test_05('timestamp(6)', 'myisam', 'sys_end');
x	y
1	1001
2	2001
3	3001
4	4001
5	5001
6	6001
7	7001
8	8001
9	9001
x	y
1	1000
2	2000
3	3000
4	4000
5	5000
6	6000
7	7000
8	8000
9	9000
1	1001
2	2001
3	3001
4	4001
5	5001
6	6001
7	7001
8	8001
9	9001
call test_05('bigint unsigned', 'innodb', 'vtq_commit_ts(sys_end)');
x	y
1	1001
2	2001
3	3001
4	4001
5	5001
6	6001
7	7001
8	8001
9	9001
x	y
1	1000
2	2000
3	3000
4	4000
5	5000
6	6000
7	7000
8	8000
9	9000
1	1001
2	2001
3	3001
4	4001
5	5001
6	6001
7	7001
8	8001
9	9001
call verify_vtq;
No	A	B	C	D
1	1	1	1	1
2	1	1	1	1
3	1	1	1	1
4	1	1	1	1
5	1	1	1	1
6	1	1	1	1
7	1	1	1	1
8	1	1	1	1
9	1	1	1	1
10	1	1	1	1
11	1	1	1	1
12	1	1	1	1
13	1	1	1	1
14	1	1	1	1
15	1	1	1	1
16	1	1	1	1
create table t1(
x int unsigned,
sys_start bigint unsigned as row start invisible,
sys_end bigint unsigned as row end invisible,
period for system_time (sys_start, sys_end))
with system versioning engine=innodb;
create table t2(x int unsigned) engine=innodb;
start transaction;
insert into t1(x) values(1);
commit;
call verify_vtq;
No	A	B	C	D
1	1	1	1	1
start transaction;
insert into t2(x) values(1);
savepoint a;
insert into t1(x) values(1);
rollback to a;
commit;
call verify_vtq;
No	A	B	C	D
insert into t2(x) values (1);
create or replace table t1 (
x int,
y int as (x) virtual,
sys_trx_start bigint unsigned as row start invisible,
sys_trx_end bigint unsigned as row end invisible,
period for system_time (sys_trx_start, sys_trx_end)
) engine=innodb with system versioning;
insert into t1 values (1, null);
update t1 set x= x + 1;
select x, y, sys_trx_end = 18446744073709551615 as current from t1 for system_time all;
x	y	current
2	2	1
1	1	0
create or replace table t1 (
x int,
row_start timestamp(6) as row start invisible,
row_end timestamp(6) as row end invisible,
period for system_time (row_start, row_end)
) with system versioning;
insert into t1 values  (1), (2);
insert into t1 (row_start) select row_end from t1;
ERROR HY000: The value specified for generated column 'row_start' in table 't1' ignored
set sql_mode='';
insert into t1 (row_start, row_end) values (DEFAULT, 1);
Warnings:
Warning	1906	The value specified for generated column 'row_end' in table 't1' ignored
set sql_mode=default;
select @@sql_mode into @saved_mode;
set sql_mode= '';
insert into t1 (x, row_start, row_end) values (3, 4, 5);
Warnings:
Warning	1906	The value specified for generated column 'row_start' in table 't1' ignored
Warning	1906	The value specified for generated column 'row_end' in table 't1' ignored
set sql_mode= @saved_mode;
insert into t1 (row_start, row_end) values (DEFAULT, DEFAULT);
select * from t1;
x
1
2
NULL
3
NULL
# MDEV-14792 INSERT without column list into table with explicit versioning columns produces bad data
create or replace table t1 (
i int,
s timestamp(6) as row start,
e timestamp(6) as row end,
c varchar(8),
period for system_time(s, e))
with system versioning;
insert into t1 values (1, null, null, 'foo');
select i, c, e>TIMESTAMP'2038-01-01 00:00:00' AS current_row from t1;
i	c	current_row
1	foo	1
drop table t1;
drop table t2;
drop procedure test_01;
drop procedure test_02;
drop procedure test_03;
drop procedure test_04;
drop procedure test_05;
set timestamp=1000000019;
select now() < sysdate();
now() < sysdate()
1
create table t1 (a int) with system versioning;
insert t1 values (1);
set @a=sysdate(6);
select * from t1 for system_time as of now(6);
a
select * from t1 for system_time as of sysdate(6);
a
1
update t1 set a=2;
delete from t1;
select *, row_start > @a, row_end > @a from t1 for system_time all;
a	row_start > @a	row_end > @a
1	0	1
2	1	1
#
# MDEV-14871 Server crashes in fill_record / fill_record_n_invoke_before_triggers upon inserting into versioned table with trigger
#
create or replace table t1 (pk int primary key) with system versioning;
create trigger tr before insert on t1 for each row select 1 into @a;
insert into t1 values (1),(2);
drop table t1;
